libray(httr)
library(httr)
library(dplyr)
GET("https://github.com/clive0305/108-2-56-inclass-practice")%>%
content() %>%
View() %>%
library(httr)
library(dplyr)
GET("https://github.com/clive0305/108-2-56-inclass-practice")%>%
content() %>%
View()
library(googlesheets4)
`出席狀況表單網址` <- "https://docs.google.com/spreadsheets/d/1EAG49qDKPWWi0ebkVr29TLrvVnoBPfkvxYY-J3xLAHY/edit?usp=drive_open&ouid=102488507875366675447 "# 缺乏定義值
ss <- as_sheets_id(`出席狀況表單網址`)
homework_sheet <- sheets_read(ss,sheet=1)
knitr::opts_chunk$set(echo = TRUE)
vectorExample <- c(2, 6, 7)
listExample <- list(2, 6, 7)
vectorExample <- c(2, 6, 7)
listExample <- list(2, 6, 7)
print(vectorExample)
print(listExample)
library(lubridate)
`小明交易1` <- list(
ymd_hms("2020-03-31T13:40:55Z"), # Date/Time class
"一芳", # character
2, # numeric
"水果茶" # character
)
print(`小明交易1`)
library(lubridate)
`小明交易1` <- list(
ymd_hms("2020-03-31T13:40:55Z"), # Date/Time class
"一芳", # character
2, # numeric
"水果茶" # character
)
print(`小明交易1`)
# list含兩個vectors
`小明108學年課表A` <- list(
c("108-1","高級會計學","高等統計學"),
c("108-2","食在拉丁美洲")
)
print(`小明108學年課表A`)
`weather`=list(
`台北市氣溫`=list(
time=ymd("2020-03-31","2020-04-01"),
`台北市`=list(
`the highest temperature`=25,
`the lowest temperature`=18)
),
`新北市氣溫`=list(
time=ymd("2020-03-31","2020-04-01"),
`新北市`=list(
`the highest temperature`=24,
`the lowest temperature`=15)
)
)
print(weather)
)
`weather`=list(
`台北市氣溫`=list(
time=ymd("2020-03-31","2020-04-01"),
`台北市`=list(
`the highest temperature`=25,
`the lowest temperature`=18)
),
`新北市氣溫`=list(
time=ymd("2020-03-31","2020-04-01"),
`新北市`=list(
`the highest temperature`=24,
`the lowest temperature`=15)
)
)
print(weather)
today <- list(
list("台北市",c(highest_temp = 25),c(lowest_temp = 18)),
list("新北市",c(highest_temp = 24),c(lowest_temp = 15)))
tomorrow <- list(
list("台北市",c(highest_temp = 25),c(lowest_temp = 18)),
list("新北市",c(highest_temp = 24),c(lowest_temp = 15)))
weather <- list(today,tomorrow)
print(weather)
`weather`=list(
`台北市氣溫`=list(
time=ymd("2020-03-31","2020-04-01"),
`台北市`=list(
`the highest temperature`=25,
`the lowest temperature`=18)
),
`新北市氣溫`=list(
time=ymd("2020-03-31","2020-04-01"),
`新北市`=list(
`the highest temperature`=24,
`the lowest temperature`=15)
)
)
print(weather)
knitr::opts_chunk$set(echo = TRUE)
library(googlesheets4)
install.packages(c("dplyr", "lubridate"))
a <- 2
a = 2 # = 與 <-同義
a
3 -> b
my_108_total_credits <- 15
my_108_total_credits
`我的108學年總學分數` <- 15
`我的108學年總學分數`
我的108學年總學分數 = 5
我的108學年總學分數
`我的年紀`<-20
my_age<-`我的年紀`
says<-c('"你媽確診"')
library(httr)
library(dplyr)
GET("https://github.com/clive0305/108-2-56-inclass-practice")%>%
content() %>%
View()
library(googlesheets4)
`出席狀況表單網址` <- "https://docs.google.com/spreadsheets/d/1EAG49qDKPWWi0ebkVr29TLrvVnoBPfkvxYY-J3xLAHY/edit?usp=drive_open&ouid=102488507875366675447 "# 缺乏定義值
ss <- as_sheets_id(`出席狀況表單網址`)
homework_sheet <- sheets_read(ss,sheet=1)
knitr::opts_chunk$set(echo = TRUE)
# list含兩個lists, 子層list又各含兩個vectors
`小明108學年課表C` <- list(
`108學年第1學期`=list(
c("108-1"), # 可只寫 "108-1"
c("高級會計學","高等統計學")
),
`108學年第2學期`=list(
c("108-2"),
c("食在拉丁美洲")
)
)
print(`小明108學年課表C`)
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
knitr::opts_chunk$set(echo = TRUE)
# 10位學生的主系
majors10_char <- c('經濟學系','社會學系','社會學系','經濟學系','經濟學系','社會學系','經濟學系','經濟學系','經濟學系','社會學系')
typeof(majors10_char)
class(majors10_char)
taiwan_time <- "西元2019年4月12日 12點55分30秒"
oslo_time <- "18.11.2018 15:33:02"
taiwan_time <- "西元2019年4月12日 12點55分30秒"
oslo_time <- "18.11.2018 15:33:02"
class(taiwan_time)
taiwan_time <- "西元2019年4月12日 12點55分30秒"
oslo_time <- "18.11.2018 15:33:02"
class(oslo_time)
taiwan_time <- "西元2019年4月12日 12點55分30秒"
oslo_time <- "18.11.2018 15:33:02"
levels(oslo_time)
taiwan_time <- "西元2019年4月12日 12點55分30秒"
oslo_time <- "18.11.2018 15:33:02"
taiwan_time <- "西元2019年4月12日 12點55分30秒"
oslo_time <- "18.11.2018 15:33:02"
two_times <- ymd_hms(taiwan_time, oslo_time)
class(two_times)
# two_times
taiwan_time <- "西元2019年4月12日 12點55分30秒"
oslo_time <- "18.11.2018 15:33:02"
two_times <- ymd_hms(taiwan_time, oslo_time)
class(two_times)
# two_times
taiwan_time <- "西元2019年4月12日 12點55分30秒"
oslo_time <- "18.11.2018 15:33:02"
two_times <- ymd_hms(c(taiwan_time, oslo_time))
class(two_times)
# two_times
taiwan_time <- ymd("西元2019年4月12日 12點55分30秒")
oslo_time <- ymd("18.11.2018 15:33:02")
two_times <-c(taiwan_time, oslo_time)
class(two_times)
# two_times
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
taiwan_time <- "西元2019年4月12日 12點55分30秒"
oslo_time <- "18.11.2018 15:33:02"
taiwan_time <- ymd("西元2019年4月12日 12點55分30秒")
oslo_time <- ymd("18.11.2018 15:33:02")
two_times <-c(taiwan_time, oslo_time)
class(two_times)
# two_times
taiwan_time <- ymd_hms("西元2019年4月12日 12點55分30秒")
oslo_time <- ymd_hms("18.11.2018 15:33:02")
two_times <-c(taiwan_time, oslo_time)
class(two_times)
# two_times
`taiwan_time` <- ymd_hms("西元2019年4月12日 12點55分30秒")
`oslo_time` <- ymd_hms("18.11.2018 15:33:02")
`two_times` <-c(taiwan_time, oslo_time)
class(two_times)
# two_times
`taiwan_time` <- ymd_hms("西元2019年4月12日 12點55分30秒")
`oslo_time` <- ymd_hms("18.11.2018 15:33:02")
`two_times` <- c(taiwan_time, oslo_time)
class(two_times)
# two_times
`taiwan_time` <- ymd_hms(
"西元2019年4月12日 12點55分30秒"
)
`oslo_time` <- ymd_hms(
"18.11.2018 15:33:02"
)
`two_times` <- c(
taiwan_time, oslo_time
)
class(two_times)
# two_times
taiwan_time <- "西元2019年4月12日 12點55分30秒"
oslo_time <- "18.11.2018 15:33:02"
`taiwan_time` <- ymd_hms(
"西元2019年4月12日 12點55分30秒"
)
`oslo_time` <- ymd_hms(
"18.11.2018 15:33:02"
)
`two_times` <- c(
taiwan_time, oslo_time
)
class(two_times)
# two_times
Sys.getlocale("LC_TIME")
taiwan_time <- "西元2019年4月12日 12點55分30秒"
oslo_time <- "18.11.2018 15:33:02"
`taiwan_time` <- ymd_hms(
"西元2019年4月12日 12點55分30秒"
)
`oslo_time` <- ymd_hms(
"18.11.2018 15:33:02"
)
`two_times` <- c(
taiwan_time, oslo_time
)
class(two_times)
# two_times
`taiwan_time` <- ymd_hms(
"西元2019年4月12日 12點55分30秒",
tz="Asia/Taipei"
)
`oslo_time` <- dmy_hms(
"18.11.2018 15:33:02",
)
`taiwan_time` <- ymd_hms(
"西元2019年4月12日 12點55分30秒",
tz="Asia/Taipei"
)
`oslo_time` <- dmy_hms(
"18.11.2018 15:33:02",
tz ="Europe/osol"
)
`taiwan_time` <- ymd_hms(
"西元2019年4月12日 12點55分30秒",
tz="Asia/Taipei"
)
`oslo_time` <- dmy_hms(
"18.11.2018 15:33:02",
tz ="Europe/Osol"
)
`two_times` <- c(ymd_hms(taiwan_time, tz = "Asia/Taipei"), dmy_hms(oslo_time, tz = "Europe/osol")
)
class(two_times)
# two_times
two_times <- c(ymd_hms(taiwan_time, tz = "Asia/Taipei"), dmy_hms(oslo_time, tz = "Europe/osol")
)
class(two_times)
# two_times
two_times_chicago <- with_tz(two_times, tzone = "America/Chicago")
with_tz(two_times, tzone = "America/Chicago")
two_times <- c(ymd_hms(taiwan_time, tz = "Asia/Taipei"), dmy_hms(oslo_time, tz = "Europe/osol")
)
class(two_times)
# two_times
with_tz(two_times, tzone = "America/Chicago")
two_times <- c(ymd_hms(taiwan_time, tz = "Asia/Taipei"), dmy_hms(oslo_time, tz = "Europe/osol")
)
class(two_times)
with_tz(two_times, tzone = "America/Chicago")
two_times <- c(ymd_hms(taiwan_time, tz = "Asia/Taipei"), dmy_hms(oslo_time, tz = "Europe/osol")
)
class(two_times)
with_tz(two_times, tzone = "America/Chicago")
print(two_times)
two_times <- c(ymd_hms(taiwan_time, tz = "Asia/Taipei"), dmy_hms(oslo_time, tz = "Europe/osol")
)
class(two_times)
with_tz(taiwan_time, tzone = "America/Chicago")
print(taiwan_time)
taiwan_time <- "西元2019年4月12日 12點55分30秒"
oslo_time <- "18.11.2018 15:33:02"
with_tz(taiwan_time, tzone = "America/Chicago")
taiwan_time <- "西元2019年4月12日 12點55分30秒"
oslo_time <- "18.11.2018 15:33:02"
two_times <- c(ymd_hms(taiwan_time, tz = "Asia/Taipei"), dmy_hms(oslo_time, tz = "Europe/osol")
)
two_times <- c(ymd_hms(taiwan_time, tz = "Asia/Taipei"), dmy_hms(oslo_time, tz = "Europe/Osol")
)
taiwan_time <- "西元2019年4月12日 12點55分30秒"
oslo_time <- "18.11.2018 15:33:02"
two_times <- c(ymd_hms(taiwan_time, tz = "Asia/Taipei"), dmy_hms(oslo_time, tz = "Europe/osol")
)
two_times <- c(ymd_hms(taiwan_time, tz = "Asia/Taipei"), dmy_hms(oslo_time, tz = "Europe/osol")
)
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
two_times <- c(ymd_hms(taiwan_time, tz = "Asia/Taipei"), dmy_hms(oslo_time, tz = "Europe/osol")
)
tpeTime <-
ymd_hms(
c("2020-03-18 13:52:40","2020-03-11 03:12:40"),
tz="Asia/Taipei"
)
pgTime <- mdy_hms("Mar.18, 2020, 05:52:40",
tz="Europe/Lisbon")
with_tz(tpeTime, tzone="Europe/Paris")
with_tz(pgTime, tzone="Europe/Paris")
two_times <- c(ymd_hms(taiwan_time, tz = "Asia/Taipei"), dmy_hms(oslo_time, tz = "Europe/osol")
)
two_times <- c(taiwan_time, oslo_time)
as.POSIXct(two_times)
taiwan_time <- as.Date("2019-4-12 12:55:30", format = "%Y-%m-%d %H:%M:%S", tz = "UTC")
oslo_time <- as.Date("2018-11-18 15:33:02", format = "%Y-%m-%d %H:%M:%S", tz = "UTC")
two_times <- c(taiwan_time, oslo_time)
as.POSIXct(two_times)
class(two_times)
with_tz(two_times, tzone = "America/Chicago")
two_times <- c(taiwan_time, oslo_time)
as.POSIXct(two_times)
class(two_times)
taiwan_time <- as.Date("2019-4-12 12:55:30", format = "%Y-%m-%d %H:%M:%S", tz = "Asia/Taipei")
oslo_time <- as.Date("2018-11-18 15:33:02", format = "%Y-%m-%d %H:%M:%S", tz = "Europe/osol")
two_times <- c(taiwan_time, oslo_time)
as.POSIXct(two_times)
class(two_times)
with_tz(two_times, tzone = "America/Chicago")
two_times <- c(taiwan_time, oslo_time)
as.POSIXct(two_times)
class(two_times)
with_tz(two_times, tzone = "America/Chicago")
source("https://www.dropbox.com/s/mk7bxvu6a3lxf79/studentEnvironmentReport.R?dl=1",print.eval = T)
fromJSON("http://data.ntpc.gov.tw/api/v1/rest/datastore/382000000A-000157-002",
simplifyDataFrame = F) -> newTaipeiCityVaccine
library(jsonlite)
source("https://www.dropbox.com/s/mk7bxvu6a3lxf79/studentEnvironmentReport.R?dl=1",print.eval = T)
library(jsonlite)
fromJSON("http://data.ntpc.gov.tw/api/v1/rest/datastore/382000000A-000157-002",
simplifyDataFrame = F) -> newTaipeiCityVaccine
str(newTaipeiCityVaccine[[1]])
str(newTaipeiCityVaccine)
lenth(newTaipeiCityVaccine)
length(newTaipeiCityVaccine)
# 顯示到第一層
str(listExample, max.level=1)
listExample <-
list(
student="小明",
`學期`=list(
`108-1`=list(
list(
name="個體經濟學",
teacher="Alice",
grade=85
)
),
`108-2`=list(
list(
name="總體經濟學",
teacher="Mark",
grade=78
)
)
)
)
# 有多少位置可選：
length(listExample)
vectorExample <- c("小明","小英","大雄")
# 有多少位置可選：
length(vectorExample)
vectorExample
vectorExample[c(1,3)]
vectorExample[c(3,2,1)] # 產生重新排列效果
# 顯示到第一層
str(listExample, max.level=1)
listExample[c(1,2)]
``{r ans31}
course<-list(approve=T,course_info=list(coursename="會計學",type="必",credits=3,time_place=list(weekday="星期三",time_slots=c(7,8,9)
,classroom="商2F05")))
course<-list(approve=T,course_info=list(coursename="會計學",type="必",credits=3,time_place=list(weekday="星期三",time_slots=c(7,8,9)
,classroom="商2F05")))
course<-list(approve=T,course_info=list(coursename="會計學",type="必",credits=3,time_place=list(weekday=c("星期三","星期二")
,time_slots=list(c(7,8),c(5)),classroom="商2F05")))
str(course)
accidents<-list(time=as.Date("2014-01-01"),bureaus=list("板橋分局"=(list(type="駕駛人過失-其他",casualties=1)),"海山分局"=(list(type="駕駛人過失-搶越行人穿越道",casualties=1))))
str(accidents)
source("https://www.dropbox.com/s/bvs0m4oxw7yaqxw/108-2-hw1-3.R?dl=1")
fiveReceipts <- .randomReceipts(n=5)
levels(fiveReceipts)
levels_fiveReceipts<-levels(fiveReceipts)
# levels_fiveReceipts
# 啟動一個乾淨空的R環境
source("https://www.dropbox.com/s/xtge2ghfb7dhple/108-2-hw1-4.R?dl=1")
# 除了Global environment會清空，之前引入的套件也會被移除
yy <- 2020
mm <- `Mar.`
dd <- 15
event_list <- list(
time=ymd(paste0(yy,",",mm,dd)),
list(
name="小明",
`是否完成`=True,
完成所花時間(秒)=350,
yy <- 2020
mm <- 3
dd <- 15
event_list = list(
time=ymd(paste0(yy,"-",mm,"-",dd)),
list(
name="小明",
`是否完成`=T,
`完成所花時間(秒)`=350,
tools=c("anchor","axe")))
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite)
pi <- c(3,1,4,1,5,9,2,6,5,3,5)
gift <- pi[[c(8)]]
gift <- pi[c(8)]
gift <- pi[c(8)]
print(gift)
gift <- pi[[c(8)]]
print(gift)
gift <- pi[c(8)]
print(gift)
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
str(corse)
str(course)
time_place <- course[["time_place"]]
time_place <- course[["time_place"]]
print(time_place)
str(course)
str(course)
length(course)
x <- course[c(2)]
print(x)
length(x)
time_place <- x[["time_place"]]
print(time_place
)
print(time_place)
time_place <- course[["time_place"]]
print(time_place)
fromJSON("https://www.dropbox.com/s/uday7x99k9q9sxm/course.json?dl=1", simplifyDataFrame = T) -> course
time_place <- course[["time_place"]]
print(time_place)
time_place <- course[c("time_place")]
print(time_place)
time_place <- course[list("weekday", "time_slots", "classroom")]
time_place <- course[c("weekday", "time_slots", "classroom")]
time_place <- course[c("weekday", "time_slots", "classroom")]
print(time_place)
course[c("weekday", "time_slots", "classroom")]
course[c("weekday")]
course[c(2)]
x <- course[c(2)]
x[c(2)]
x <- course[c(2)]
x[c(1)]
x <- course[c(2)]
x[["time_place"]]
course[["time_place"]]
knitr::opts_chunk$set(echo = TRUE)
listExample <-
list(
student="小明",
`學期`=list(
`108-1`=list(
list(
name="個體經濟學",
teacher="Alice",
grade=85
)
),
`108-2`=list(
list(
name="總體經濟學",
teacher="Mark",
grade=78
)
)
)
)
# 有多少位置可選：
length(listExample)
# 有多少名字可選：
names(listExample)
str(course)
length(course)
names(course)
course[["course"]]
names(x)
time_place <- x[c(F, F, F, T
)]
x <- course[["course"]]
time_place <- x[c(F, F, F, T
)]
x <- course[["course"]]
time_place <- x[c(F, F, F, T
)]
print(time_place)
